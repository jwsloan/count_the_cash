- if envelopes.nil? || envelopes.empty?
  - if signed_in?
    %span.text-warning= "Hello, #{current_user.name}. Use the link above to create your first envelope!"
  - else
    %span.text-warning Please use the link above to sign-in/sign-up.
- else
  - # Total count of each denomination in all envelopes for this user
  - total_twenties = 0
  - total_tens = 0
  - total_fives = 0
  - total_ones = 0
  %table.table.table-bordered.table-hover
    %thead
      %tr
        %th
        %th
        %th Category
        %th Name
        %th.money Current
        %th.money Additional
        -#TODO: Would like to pull in subclasses of Denomination
        %th.denominations Twenties
        %th.denominations Tens
        %th.denominations Fives
        %th.denominations Ones
        %th.totals.money New Total
    %tbody
      - envelopes.each do |e|
        %tr
          - # Incriment denominations totals for by count in this envelope.
          - total_twenties += e.twenties.count_in_envelope
          - total_tens += e.tens.count_in_envelope
          - total_fives += e.fives.count_in_envelope
          - total_ones += e.ones.count_in_envelope
          %td
            - delete_message = "Do you really want to delete your '#{ e.name }' envelope?"
            = link_to envelope_path(e), :remote => true,
                                        :method => :delete,
                                        :data => { :confirm => delete_message } do
              %i.icon-remove
          %td
            = link_to edit_envelope_path(e), :remote => true do
              %i.icon-edit
          %td= e.category
          %td= e.name
          %td.money= "$#{ e.current_amount }"
          %td.money= "$#{ e.additional_amount }"
          -#TODO: Would like to pull in subclasses of Denomination
          %td.denominations= e.twenties.count_in_envelope
          %td.denominations= e.tens.count_in_envelope
          %td.denominations= e.fives.count_in_envelope
          %td.denominations= e.ones.count_in_envelope
          %td.totals.money= "$#{ e.current_amount + e.additional_amount }"
    %tfoot
      %tr.totals
        - total_current = current_user.envelopes.sum :current_amount
        - total_additional = current_user.envelopes.sum :additional_amount
        - total_new = total_current + total_additional
        %td
        %td
        %td
        %td Totals:
        %td.money= "$#{ total_current }"
        %td.money= "$#{ total_additional }"
        -#TODO: Would like to pull in subclasses of Denomination
        %td.denominations.money= "$#{ total_twenties * 20 }"
        %td.denominations.money= "$#{ total_tens * 10 }"
        %td.denominations.money= "$#{ total_fives * 5 }"
        %td.denominations.money= "$#{ total_ones }"
        %td.totals.money= "$#{ total_new }"

